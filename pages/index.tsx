import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { EthersAdapter } from '@safe-global/protocol-kit'
import { SafeFactory } from '@safe-global/protocol-kit'
import SafeApiKit from '@safe-global/api-kit'
import { SafeAccountConfig } from '@safe-global/protocol-kit'
import { ethers } from 'ethers';
import { Button, TextField } from '@mui/material';
import { useAccount, useProvider, useSigner } from 'wagmi';
import { useState } from 'react';


const Home: NextPage = () => {
  const [safeAddress, setSafeAddress] = useState("")
  const [inputValue, setInputValue] = useState('');

  const { data: owner1Signer, isError, isLoading } = useSigner()
  const { address, isConnected, isDisconnected } = useAccount();

  console.log("OWNEEER", owner1Signer)
  const ethAdapterOwner1 = new EthersAdapter({
    ethers,
    signerOrProvider: owner1Signer
  })

  async function handleCreateAccount() {
    const txServiceUrl = 'https://safe-transaction-goerli.safe.global'
    const safeService = new SafeApiKit({ txServiceUrl, ethAdapter: ethAdapterOwner1 })
    const safeFactory = await SafeFactory.create({ ethAdapter: ethAdapterOwner1 })

    const safeAccountConfig: SafeAccountConfig = {
      owners: [
        await owner1Signer.getAddress(),
      ],
      threshold: 1,
      // ... (Optional params)
    }

    const safeSdkOwner1 = await safeFactory.deploySafe({ safeAccountConfig })
    
    const tempSafeAddress = safeSdkOwner1.getAddress()

    setSafeAddress(tempSafeAddress)
    
    console.log('Your Safe has been deployed:')
    console.log(`https://goerli.etherscan.io/address/${safeAddress}`)
    console.log(`https://app.safe.global/gor:${safeAddress}`)
  }

  const handleInputChange = (event: any) => {
    setInputValue(event.target.value);
  };

  const handleSendEthClick = async () => {
    sendEthToSafe(inputValue);
  };

  async function sendEthToSafe(amount: string) {
    const safeAmount = ethers.utils.parseUnits(amount, 'ether').toHexString()

    const transactionParameters = {
      to: safeAddress,
      value: safeAmount
    }

    const tx = await owner1Signer.sendTransaction(transactionParameters)

    console.log('Fundraising.')
    console.log(`Deposit Transaction: https://goerli.etherscan.io/tx/${tx.hash}`)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Mango</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />
        <Button onClick={handleCreateAccount}>Handle Create Account </Button>
        <h5>Your Safe Address: {safeAddress}</h5>
        <TextField id="standard-basic" label="Standard" variant="standard" onChange={handleInputChange}/>
        <Button onClick={handleSendEthClick}>Send ETH to Your Safe</Button>
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          from Tokyo with love...
        </a>
      </footer>
    </div>
  );
};

export default Home;
